// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Purchase {
  purchase_id   Int        @id @default(autoincrement())
  customer_id   Int
  street        String
  city          String
  province      String
  country       String
  postal_code   String
  credit_card   String
  credit_expire DateTime
  credit_cvv    String
  invoice_amt   Float
  invoice_tax   Float
  invoice_total Float
  order_date    DateTime

  customer      Customer   @relation(fields: [customer_id], references: [customer_id])
  PurchaseItem  PurchaseItem[]

}

model Customer {
  customer_id   Int        @id @default(autoincrement())
  email         String     @unique
  password      String
  first_name    String
  last_name     String

  purchases     Purchase[] // This is the opposite relation field
}

model PurchaseItem {
  purchase_id   Int
  product_id    Int
  quantity      Int

  purchase      Purchase  @relation(fields: [purchase_id], references: [purchase_id])
  product       Product   @relation(fields: [product_id], references: [product_id])

  @@id([purchase_id, product_id]) // Composite primary key
}

model Product {
  product_id    Int        @id @default(autoincrement())
  name          String
  description   String
  cost          Decimal
  image_filename String

  purchaseItems PurchaseItem[]  // This is the opposite relation field
}
